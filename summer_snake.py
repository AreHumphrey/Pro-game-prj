import pygame
import random
import time

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame
pygame.init()

# üñ•Ô∏è –ë–æ–ª—å—à–æ–π —ç–∫—Ä–∞–Ω
width, height = 600, 600
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("–ó–º–µ–π–∫–∞ ‚Äî –ö—Ä—É–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è")

# üé® –¶–≤–µ—Ç–∞
black = (0, 0, 0)
green = (0, 255, 0)
red = (255, 0, 0)

# üî≤ –†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞ (—É–∂–µ –∫—Ä—É–ø–Ω—ã–π ‚Äî 20x20)
block = 20

# ‚è±Ô∏è –°–∫–æ—Ä–æ—Å—Ç—å –∏–≥—Ä—ã
clock = pygame.time.Clock()
speed = 10  # –ú–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å, –µ—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ

# üçé –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π –µ–¥—ã
def new_food():
    return (
        random.randint(0, (width - block) // block) * block,
        random.randint(0, (height - block) // block) * block
    )

# üêç –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã
def game():
    # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è ‚Äî —Ü–µ–Ω—Ç—Ä —ç–∫—Ä–∞–Ω–∞
    x = width // 2
    y = height // 2

    # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è (–Ω–∞—á–∏–Ω–∞–µ–º –≤–ø—Ä–∞–≤–æ)
    dx, dy = block, 0

    # –¢–µ–ª–æ –∑–º–µ–π–∫–∏ ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç [x, y]
    snake = [[x, y]]
    length = 1  # –î–ª–∏–Ω–∞ –∑–º–µ–π–∫–∏

    # –ï–¥–∞
    food_x, food_y = new_food()

    # –ì–ª–∞–≤–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
    while True:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                return

            # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–∫–∞–º–∏
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT and dx == 0:  # –ù–µ–ª—å–∑—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ 180
                    dx, dy = -block, 0
                elif event.key == pygame.K_RIGHT and dx == 0:
                    dx, dy = block, 0
                elif event.key == pygame.K_UP and dy == 0:
                    dx, dy = 0, -block
                elif event.key == pygame.K_DOWN and dy == 0:
                    dx, dy = 0, block

        # –î–≤–∏–≥–∞–µ–º –≥–æ–ª–æ–≤—É
        x += dx
        y += dy

        # üöß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å–æ —Å—Ç–µ–Ω–∞–º–∏
        if x < 0 or x >= width or y < 0 or y >= height:
            break  # –ü—Ä–æ–∏–≥—Ä—ã—à ‚Äî –≤—ã—Ö–æ–¥–∏–º, –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫

        # üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å —Å–æ–±–æ–π (–∫—Ä–æ–º–µ —Ö–≤–æ—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —É–π–¥—ë—Ç)
        if [x, y] in snake:
            break

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –≥–æ–ª–æ–≤—É
        snake.append([x, y])

        # üçΩÔ∏è –ï—Å–ª–∏ —Å—ä–µ–ª–∏ –µ–¥—É ‚Äî –Ω–µ —É–¥–∞–ª—è–µ–º —Ö–≤–æ—Å—Ç, –∏–Ω–∞—á–µ —É–¥–∞–ª—è–µ–º
        if x == food_x and y == food_y:
            length += 1
            food_x, food_y = new_food()  # –ù–æ–≤–∞—è –µ–¥–∞
        else:
            snake.pop(0)  # –£–¥–∞–ª—è–µ–º —Ö–≤–æ—Å—Ç

        # üé® –û—Ç—Ä–∏—Å–æ–≤–∫–∞
        screen.fill(black)  # –§–æ–Ω

        # –†–∏—Å—É–µ–º –µ–¥—É (–∫—Ä–∞—Å–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç 20x20)
        pygame.draw.rect(screen, red, [food_x, food_y, block, block])

        # –†–∏—Å—É–µ–º –∑–º–µ–π–∫—É (–∫–∞–∂–¥—ã–π —Å–µ–≥–º–µ–Ω—Ç ‚Äî –∑–µ–ª—ë–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç 20x20)
        for part in snake:
            pygame.draw.rect(screen, green, [part[0], part[1], block, block])

        # –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω
        pygame.display.update()

        # –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
        clock.tick(speed)

    # ‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
    time.sleep(1)
    game()  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
game()
